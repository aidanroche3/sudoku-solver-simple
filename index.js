import fs from "fs";

let input = fs.readFileSync("./input/sudoku_in.txt", "ascii");

let declaration = `
(declare-fun x11 () Int)
(declare-fun x12 () Int)
(declare-fun x13 () Int)
(declare-fun x14 () Int)
(declare-fun x15 () Int)
(declare-fun x16 () Int)
(declare-fun x17 () Int)
(declare-fun x18 () Int)
(declare-fun x19 () Int)
(declare-fun x21 () Int)
(declare-fun x22 () Int)
(declare-fun x23 () Int)
(declare-fun x24 () Int)
(declare-fun x25 () Int)
(declare-fun x26 () Int)
(declare-fun x27 () Int)
(declare-fun x28 () Int)
(declare-fun x29 () Int)
(declare-fun x31 () Int)
(declare-fun x32 () Int)
(declare-fun x33 () Int)
(declare-fun x34 () Int)
(declare-fun x35 () Int)
(declare-fun x36 () Int)
(declare-fun x37 () Int)
(declare-fun x38 () Int)
(declare-fun x39 () Int)
(declare-fun x41 () Int)
(declare-fun x42 () Int)
(declare-fun x43 () Int)
(declare-fun x44 () Int)
(declare-fun x45 () Int)
(declare-fun x46 () Int)
(declare-fun x47 () Int)
(declare-fun x48 () Int)
(declare-fun x49 () Int)
(declare-fun x51 () Int)
(declare-fun x52 () Int)
(declare-fun x53 () Int)
(declare-fun x54 () Int)
(declare-fun x55 () Int)
(declare-fun x56 () Int)
(declare-fun x57 () Int)
(declare-fun x58 () Int)
(declare-fun x59 () Int)
(declare-fun x61 () Int)
(declare-fun x62 () Int)
(declare-fun x63 () Int)
(declare-fun x64 () Int)
(declare-fun x65 () Int)
(declare-fun x66 () Int)
(declare-fun x67 () Int)
(declare-fun x68 () Int)
(declare-fun x69 () Int)
(declare-fun x71 () Int)
(declare-fun x72 () Int)
(declare-fun x73 () Int)
(declare-fun x74 () Int)
(declare-fun x75 () Int)
(declare-fun x76 () Int)
(declare-fun x77 () Int)
(declare-fun x78 () Int)
(declare-fun x79 () Int)
(declare-fun x81 () Int)
(declare-fun x82 () Int)
(declare-fun x83 () Int)
(declare-fun x84 () Int)
(declare-fun x85 () Int)
(declare-fun x86 () Int)
(declare-fun x87 () Int)
(declare-fun x88 () Int)
(declare-fun x89 () Int)
(declare-fun x91 () Int)
(declare-fun x92 () Int)
(declare-fun x93 () Int)
(declare-fun x94 () Int)
(declare-fun x95 () Int)
(declare-fun x96 () Int)
(declare-fun x97 () Int)
(declare-fun x98 () Int)
(declare-fun x99 () Int)
`;

let contraints = `
(assert (and (>= x11 1) (<= x11 9)))
(assert (and (>= x12 1) (<= x12 9)))
(assert (and (>= x13 1) (<= x13 9)))
(assert (and (>= x14 1) (<= x14 9)))
(assert (and (>= x15 1) (<= x15 9)))
(assert (and (>= x16 1) (<= x16 9)))
(assert (and (>= x17 1) (<= x17 9)))
(assert (and (>= x18 1) (<= x18 9)))
(assert (and (>= x19 1) (<= x19 9)))
(assert (and (>= x21 1) (<= x21 9)))
(assert (and (>= x22 1) (<= x22 9)))
(assert (and (>= x23 1) (<= x23 9)))
(assert (and (>= x24 1) (<= x24 9)))
(assert (and (>= x25 1) (<= x25 9)))
(assert (and (>= x26 1) (<= x26 9)))
(assert (and (>= x27 1) (<= x27 9)))
(assert (and (>= x28 1) (<= x28 9)))
(assert (and (>= x29 1) (<= x29 9)))
(assert (and (>= x31 1) (<= x31 9)))
(assert (and (>= x32 1) (<= x32 9)))
(assert (and (>= x33 1) (<= x33 9)))
(assert (and (>= x34 1) (<= x34 9)))
(assert (and (>= x35 1) (<= x35 9)))
(assert (and (>= x36 1) (<= x36 9)))
(assert (and (>= x37 1) (<= x37 9)))
(assert (and (>= x38 1) (<= x38 9)))
(assert (and (>= x39 1) (<= x39 9)))
(assert (and (>= x41 1) (<= x41 9)))
(assert (and (>= x42 1) (<= x42 9)))
(assert (and (>= x43 1) (<= x43 9)))
(assert (and (>= x44 1) (<= x44 9)))
(assert (and (>= x45 1) (<= x45 9)))
(assert (and (>= x46 1) (<= x46 9)))
(assert (and (>= x47 1) (<= x47 9)))
(assert (and (>= x48 1) (<= x48 9)))
(assert (and (>= x49 1) (<= x49 9)))
(assert (and (>= x51 1) (<= x51 9)))
(assert (and (>= x52 1) (<= x52 9)))
(assert (and (>= x53 1) (<= x53 9)))
(assert (and (>= x54 1) (<= x54 9)))
(assert (and (>= x55 1) (<= x55 9)))
(assert (and (>= x56 1) (<= x56 9)))
(assert (and (>= x57 1) (<= x57 9)))
(assert (and (>= x58 1) (<= x58 9)))
(assert (and (>= x59 1) (<= x59 9)))
(assert (and (>= x61 1) (<= x61 9)))
(assert (and (>= x62 1) (<= x62 9)))
(assert (and (>= x63 1) (<= x63 9)))
(assert (and (>= x64 1) (<= x64 9)))
(assert (and (>= x65 1) (<= x65 9)))
(assert (and (>= x66 1) (<= x66 9)))
(assert (and (>= x67 1) (<= x67 9)))
(assert (and (>= x68 1) (<= x68 9)))
(assert (and (>= x69 1) (<= x69 9)))
(assert (and (>= x71 1) (<= x71 9)))
(assert (and (>= x72 1) (<= x72 9)))
(assert (and (>= x73 1) (<= x73 9)))
(assert (and (>= x74 1) (<= x74 9)))
(assert (and (>= x75 1) (<= x75 9)))
(assert (and (>= x76 1) (<= x76 9)))
(assert (and (>= x77 1) (<= x77 9)))
(assert (and (>= x78 1) (<= x78 9)))
(assert (and (>= x79 1) (<= x79 9)))
(assert (and (>= x81 1) (<= x81 9)))
(assert (and (>= x82 1) (<= x82 9)))
(assert (and (>= x83 1) (<= x83 9)))
(assert (and (>= x84 1) (<= x84 9)))
(assert (and (>= x85 1) (<= x85 9)))
(assert (and (>= x86 1) (<= x86 9)))
(assert (and (>= x87 1) (<= x87 9)))
(assert (and (>= x88 1) (<= x88 9)))
(assert (and (>= x89 1) (<= x89 9)))
(assert (and (>= x91 1) (<= x91 9)))
(assert (and (>= x92 1) (<= x92 9)))
(assert (and (>= x93 1) (<= x93 9)))
(assert (and (>= x94 1) (<= x94 9)))
(assert (and (>= x95 1) (<= x95 9)))
(assert (and (>= x96 1) (<= x96 9)))
(assert (and (>= x97 1) (<= x97 9)))
(assert (and (>= x98 1) (<= x98 9)))
(assert (and (>= x99 1) (<= x99 9)))
(assert (distinct x11 x12 x13 x14 x15 x16 x17 x18 x19))
(assert (distinct x21 x22 x23 x24 x25 x26 x27 x28 x29))
(assert (distinct x31 x32 x33 x34 x35 x36 x37 x38 x39))
(assert (distinct x41 x42 x43 x44 x45 x46 x47 x48 x49))
(assert (distinct x51 x52 x53 x54 x55 x56 x57 x58 x59))
(assert (distinct x61 x62 x63 x64 x65 x66 x67 x68 x69))
(assert (distinct x71 x72 x73 x74 x75 x76 x77 x78 x79))
(assert (distinct x81 x82 x83 x84 x85 x86 x87 x88 x89))
(assert (distinct x91 x92 x93 x94 x95 x96 x97 x98 x99))
(assert (distinct x11 x21 x31 x41 x51 x61 x71 x81 x91))
(assert (distinct x12 x22 x32 x42 x52 x62 x72 x82 x92))
(assert (distinct x13 x23 x33 x43 x53 x63 x73 x83 x93))
(assert (distinct x14 x24 x34 x44 x54 x64 x74 x84 x94))
(assert (distinct x15 x25 x35 x45 x55 x65 x75 x85 x95))
(assert (distinct x16 x26 x36 x46 x56 x66 x76 x86 x96))
(assert (distinct x17 x27 x37 x47 x57 x67 x77 x87 x97))
(assert (distinct x18 x28 x38 x48 x58 x68 x78 x88 x98))
(assert (distinct x19 x29 x39 x49 x59 x69 x79 x89 x99))
(assert (distinct x11 x12 x13 x21 x22 x23 x31 x32 x33))
(assert (distinct x14 x15 x16 x24 x25 x26 x34 x35 x36))
(assert (distinct x17 x18 x19 x27 x28 x29 x37 x38 x39))
(assert (distinct x41 x42 x43 x51 x52 x53 x61 x62 x63))
(assert (distinct x44 x45 x46 x54 x55 x56 x64 x65 x66))
(assert (distinct x47 x48 x49 x57 x58 x59 x67 x68 x69))
(assert (distinct x71 x72 x73 x81 x82 x83 x91 x92 x93))
(assert (distinct x74 x75 x76 x84 x85 x86 x94 x95 x96))
(assert (distinct x77 x78 x79 x87 x88 x89 x97 x98 x99))
`;

let output = `
(check-sat)
(get-model)
`;

let solveState = (declaration += contraints += input += output);

if (fs.existsSync("./output/sudoku_out.txt")) {
  fs.unlink("./output/sudoku_out.txt", (error) => {});
}

fs.writeFile(
  "./output/sudoku_out.txt",
  solveState,
  { encoding: "ascii" },
  (error) => {}
);
console.log("Done!");
